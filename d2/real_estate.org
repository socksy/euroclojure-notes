* Real estate Clojure
** rightmove, the UK real estate portal
Zoopla comes on the stage, fun duopoly. Not good for estate agent (real estate brokers) because they have to pay to go on these sites.
Estate agents just want something for a voice <this sounds a bit like marketing bollocks>.
**  Requirements
Consumer portal
Data Processing pipeline
Estate Agents Portal
Internal support tools
** So how does Clojure fit in?
*** Huge product build, non-negotiable deadline
*** So Clojure is the solution?
**** Data transformation. The project is just data moving around.
**** Conservative choice
Obviously.
**** Community cohesion
Good ecosystem, lots of libraries, people wanting to work together
** The stack
[[https://twitter.com/mohitthatte/status/614371729356529664]]
*** Front-end
For the consumer portal
**** Ring, Compojure, Friend, Liberator, Bidi
**** Elastic
*** Back-end
**** SQS, S3, Postgres
** Core Async channels for moving information between different functions
Each function does a small thing that does what they say they do, with a namespace just for core.async stuff.
This can get you quite a long way.
** Pipeline
*** Validate -> Process -> Golden Store, Publish -> Front end store
All using prismatic/schema, a fantastic library
*** Swagger metosin/compjure-api
**  Launch happens â€” more stuff comes up to do

** Lessons
*** Keep It Simple Stupid
Do we really need instaparser here, or can we just use a regex/csv file?
We love core.async, but what if we don't want to use it.
*** Mainting a shared ownership
Stuff like retrospectives, other scrum stuff
* OnTheMarket.com
<check it out. It's pretty nice>
** "Website is all there, it's all kind of working. No wait, it is working!"
** Estate agents plaster the stickers all over their windows
